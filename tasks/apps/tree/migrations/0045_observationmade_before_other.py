# Generated by Django 3.2.16 on 2024-02-23 23:42

from django.db import migrations
from django.db.models import OuterRef, Subquery, Exists


from tasks.apps.tree.commit import calculate_changes_per_board
from tasks.apps.tree.models import default_state


def forwards_func(apps, schema_editor):
    ObservationMade = apps.get_model("tree", "ObservationMade")
    ObservationRecontextualized = apps.get_model("tree", "ObservationRecontextualized")
    ObservationUpdated = apps.get_model("tree", "ObservationUpdated")
    ObservationReflectedUpon = apps.get_model("tree", "ObservationReflectedUpon")
    ObservationReinterpreted = apps.get_model("tree", "ObservationReinterpreted")
    ObservationClosed = apps.get_model("tree", "ObservationClosed")

    models = [
        ObservationRecontextualized,
        ObservationUpdated,
        ObservationReflectedUpon,
        ObservationReinterpreted,
        ObservationClosed,
    ]
    
    db_alias = schema_editor.connection.alias

    earliest_published = {}

    for model in models:
        subquery = ObservationMade.objects.using(db_alias).filter(
            event_stream_id=OuterRef('event_stream_id'),
            published__lte=OuterRef('published')
        )

        subquery = ObservationMade.objects.filter(
            event_stream_id=OuterRef('event_stream_id'),
            published__lte=OuterRef('published')
        )

        instances = model.objects.using(db_alias).annotate(
            made_exists=Exists(subquery)
        ).filter(made_exists=False)

        for instance in instances:
            earliest_published[instance.event_stream_id] = min(
                earliest_published.get(instance.event_stream_id, instance.published), 
                instance.published
            )

    for event_stream_id, published in earliest_published.items():
        ObservationMade.objects.using(db_alias).filter(
            event_stream_id=event_stream_id,
        ).update(
            published=published
        )

class Migration(migrations.Migration):

    dependencies = [
        ('tree', '0044_alter_breakthrough_theme'),
    ]

    operations = [
        migrations.RunPython(forwards_func, migrations.RunPython.noop),
    ]
