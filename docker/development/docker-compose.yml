
networks:
    tasks:

services:
    tasks-db:
        image: postgres:14-alpine
        environment:
            POSTGRES_PASSWORD: secret
            POSTGRES_USER: tasks
            POSTGRES_DB: tasks
        volumes:
            - "./db:/var/lib/postgresql/data"
        networks:
            - tasks
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U tasks"]
            interval: 2s
            timeout: 2s
            retries: 10
    tasks-queue:
        image: redis:7-alpine
        networks:
          - tasks
    tasks-celery:
        image: "python:3.10-alpine"
        volumes:
            - "../..:/app"
        networks:
            - tasks
        depends_on:
            - tasks-queue
        command: "/app/docker/development/scripts/run-celery.sh"
        working_dir: /app
    tasks-backend:
        image: "python:3.10-alpine"
        volumes:
            - "../..:/app"
        ports:
            - "8000:8000"
        networks:
            - tasks
        depends_on:
            tasks-db:
                condition: service_healthy
        command: "/app/docker/development/scripts/run-development.sh"
        working_dir: /app
    tasks-frontend:
        image: "node:22-alpine"
        volumes:
            - "../..:/app"
        command: "/app/docker/development/scripts/run-frontend.sh"
        working_dir: /app
    mcp-postgres:
        image: bytebase/dbhub:latest
        ports:
            - "7079:8080"
        networks:
            - tasks
        environment:
            - DBHUB_LOG_LEVEL=info
        command:
            - --transport
            - http
            - --port
            - "8080"
            - --readonly
            - --dsn
            - "postgres://tasks:secret@tasks-db:5432/tasks"
        depends_on:
            tasks-db:
                condition: service_healthy
